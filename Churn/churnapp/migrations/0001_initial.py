# Generated by Django 4.2.7 on 2025-09-18 17:58

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AlertRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('is_active', models.BooleanField(default=True)),
                ('churn_threshold', models.FloatField(default=0.32)),
                ('sudden_increase_threshold', models.FloatField(default=0.1)),
                ('send_email', models.BooleanField(default=True)),
                ('send_sms', models.BooleanField(default=False)),
                ('email_recipients', models.TextField(help_text='Comma-separated email addresses')),
                ('check_frequency_minutes', models.IntegerField(default=60)),
                ('cooldown_hours', models.IntegerField(default=24)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'alert_rules',
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer_id', models.CharField(max_length=100, unique=True)),
                ('name', models.CharField(max_length=200)),
                ('email', models.EmailField(max_length=254)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('avg_daily_logins', models.FloatField(default=0.0)),
                ('avg_weekly_orders', models.FloatField(default=0.0)),
                ('avg_session_duration', models.FloatField(default=0.0)),
                ('last_activity', models.DateTimeField(blank=True, null=True)),
                ('current_churn_probability', models.FloatField(default=0.0)),
                ('last_prediction_update', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CustomerProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer_id', models.CharField(max_length=100, unique=True)),
                ('name', models.CharField(max_length=200)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('current_churn_probability', models.FloatField(default=0.0)),
                ('current_value_score', models.FloatField(default=0.0)),
                ('current_segment_id', models.IntegerField(default=4)),
                ('previous_churn_probability', models.FloatField(default=0.0)),
                ('last_prediction_date', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tenure', models.IntegerField(default=0)),
                ('order_count', models.IntegerField(default=0)),
                ('cashback_amount', models.FloatField(default=0.0)),
            ],
            options={
                'db_table': 'customer_profiles',
            },
        ),
        migrations.CreateModel(
            name='RealTimeWatchlist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added_at', models.DateTimeField(auto_now_add=True)),
                ('reason', models.CharField(max_length=200)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], default='medium', max_length=10)),
                ('check_frequency_minutes', models.IntegerField(default=5)),
                ('alert_threshold', models.FloatField(default=0.7)),
                ('is_active', models.BooleanField(default=True)),
                ('customer', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='watchlist_entry', to='churnapp.customer')),
            ],
            options={
                'ordering': ['-added_at'],
            },
        ),
        migrations.CreateModel(
            name='CustomerBehaviorBaseline',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('avg_logins_per_day', models.FloatField(default=0.0)),
                ('std_logins_per_day', models.FloatField(default=0.0)),
                ('typical_login_hours', models.JSONField(default=list)),
                ('avg_purchases_per_week', models.FloatField(default=0.0)),
                ('std_purchases_per_week', models.FloatField(default=0.0)),
                ('avg_purchase_amount', models.FloatField(default=0.0)),
                ('avg_session_duration', models.FloatField(default=0.0)),
                ('std_session_duration', models.FloatField(default=0.0)),
                ('avg_page_views_per_session', models.FloatField(default=0.0)),
                ('avg_searches_per_session', models.FloatField(default=0.0)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('data_points_count', models.IntegerField(default=0)),
                ('customer', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='baseline', to='churnapp.customer')),
            ],
        ),
        migrations.CreateModel(
            name='ChurnAlert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alert_type', models.CharField(choices=[('threshold_breach', 'Threshold Breach'), ('sudden_increase', 'Sudden Risk Increase'), ('segment_change', 'Segment Change'), ('critical_customer', 'Critical Customer Alert')], max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], default='medium', max_length=10)),
                ('status', models.CharField(choices=[('active', 'Active'), ('acknowledged', 'Acknowledged'), ('resolved', 'Resolved'), ('dismissed', 'Dismissed')], default='active', max_length=15)),
                ('title', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('churn_probability', models.FloatField()),
                ('previous_probability', models.FloatField(default=0.0)),
                ('probability_change', models.FloatField(default=0.0)),
                ('segment_id', models.IntegerField()),
                ('email_sent', models.BooleanField(default=False)),
                ('sms_sent', models.BooleanField(default=False)),
                ('notification_sent_at', models.DateTimeField(blank=True, null=True)),
                ('acknowledged_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('acknowledged_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='acknowledged_alerts', to=settings.AUTH_USER_MODEL)),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alerts', to='churnapp.customerprofile')),
            ],
            options={
                'db_table': 'churn_alerts',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CustomerEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_type', models.CharField(choices=[('login', 'User Login'), ('logout', 'User Logout'), ('purchase', 'Purchase Made'), ('cart_add', 'Item Added to Cart'), ('cart_abandon', 'Cart Abandoned'), ('payment_failed', 'Payment Failed'), ('support_ticket', 'Support Ticket Created'), ('app_crash', 'App Crash'), ('page_view', 'Page View'), ('search', 'Search Performed')], max_length=20)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('processed', models.BooleanField(default=False)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events', to='churnapp.customer')),
            ],
            options={
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['customer', 'event_type', 'timestamp'], name='churnapp_cu_custome_7a061e_idx'), models.Index(fields=['processed', 'timestamp'], name='churnapp_cu_process_a608c9_idx')],
            },
        ),
        migrations.CreateModel(
            name='AnomalyAlert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alert_type', models.CharField(choices=[('login_drop', 'Login Frequency Drop'), ('purchase_drop', 'Purchase Activity Drop'), ('session_anomaly', 'Session Duration Anomaly'), ('payment_issues', 'Payment Problems'), ('support_spike', 'Support Ticket Spike'), ('engagement_drop', 'Engagement Drop')], max_length=20)),
                ('severity', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], max_length=10)),
                ('status', models.CharField(choices=[('new', 'New'), ('acknowledged', 'Acknowledged'), ('investigating', 'Investigating'), ('resolved', 'Resolved'), ('false_positive', 'False Positive')], default='new', max_length=15)),
                ('description', models.TextField()),
                ('anomaly_score', models.FloatField()),
                ('baseline_value', models.FloatField(blank=True, null=True)),
                ('current_value', models.FloatField(blank=True, null=True)),
                ('detected_at', models.DateTimeField(auto_now_add=True)),
                ('acknowledged_at', models.DateTimeField(blank=True, null=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('triggered_churn_prediction', models.BooleanField(default=False)),
                ('updated_churn_probability', models.FloatField(blank=True, null=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='anomaly_alerts', to='churnapp.customer')),
            ],
            options={
                'ordering': ['-detected_at'],
                'indexes': [models.Index(fields=['status', 'severity', 'detected_at'], name='churnapp_an_status_8dba98_idx'), models.Index(fields=['customer', 'alert_type'], name='churnapp_an_custome_cd2ead_idx')],
            },
        ),
    ]
